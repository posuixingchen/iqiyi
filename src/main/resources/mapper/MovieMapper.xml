<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zjc.mapper.MovieMapper">
    <resultMap id="movieMap" type="com.zjc.pojo.Movie">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="director" column="director"/>
        <result property="time_length" column="time_length"/>
        <result property="pub_date" column="pub_date"/>
        <result property="description" column="description"/>
        <result property="rating" column="rating"/>
        <result property="pic" column="pic"/>

        <collection property="categories" ofType="com.zjc.pojo.Category">
            <id property="id" column="cid"/>
            <result property="catname" column="catname"/>
        </collection>

        <collection property="actors" ofType="com.zjc.pojo.Actor">
            <id property="id" column="aid"/>
            <result property="name" column="aname"/>
            <result property="birthday" column="abirthday"/>
            <result property="sex" column="asex"/>
            <result property="description" column="adescription"/>
            <result property="pic" column="apic"/>
        </collection>
    </resultMap>


    <select id="findMovie" resultMap="movieMap">
        select movie.*,
               actor.id          aid,
               actor.name        aname,
               actor.birthday    abirthday,
               actor.sex         asex,
               actor.description adescription,
               actor.pic         apic,
               category.id       cid,
               category.catname  catname
        from movie
                 left join movie_actor on movie.id = movie_actor.movieid
                 left join actor on movie_actor.actorid = actor.id
                 left join movie_category on movie.id = movie_category.movieid
                 left join category on movie_category.categoryid = category.id
    </select>

    <select id="findById" resultMap="movieMap">
        select movie.*,
               actor.id          aid,
               actor.name        aname,
               actor.birthday    abirthday,
               actor.sex         asex,
               actor.description adescription,
               actor.pic         apic,
               category.id       cid,
               category.catname  catname
        from movie
                 left join movie_actor on movie.id = movie_actor.movieid
                 left join actor on movie_actor.actorid = actor.id
                 left join movie_category on movie.id = movie_category.movieid
                 left join category on movie_category.categoryid = category.id
        where movie.id = #{id}
    </select>

    <select id="findTop3ByCates" resultMap="movieMap">
        select movie.*,
               actor.id          aid,
               actor.name        aname,
               actor.birthday    abirthday,
               actor.sex         asex,
               actor.description adescription,
               actor.pic         apic,
               category.id       cid,
               category.catname  catname
        from movie
                 left join movie_actor on movie.id = movie_actor.movieid
                 left join actor on movie_actor.actorid = actor.id
                 left join movie_category on movie.id = movie_category.movieid
                 left join category on movie_category.categoryid = category.id
        where movie.id != #{id}
          and movie.id in (
            select movie_category.movieid
            from movie_category
            where movie_category.movieid != #{id}
          and movie_category.categoryid in (
            select movie_category.id
            from movie
            left join movie_category on movie_category.movieid = movie.id
            where movie.id = #{id}
            )
            )
        order by movie.pub_date desc
    </select>

    <select id="findTop3ByActors" resultMap="movieMap">
        select movie.*,
               actor.id          aid,
               actor.name        aname,
               actor.birthday    abirthday,
               actor.sex         asex,
               actor.description adescription,
               actor.pic         apic,
               category.id       cid,
               category.catname  catname
        from movie
                 left join movie_actor on movie.id = movie_actor.movieid
                 left join actor on movie_actor.actorid = actor.id
                 left join movie_category on movie.id = movie_category.movieid
                 left join category on movie_category.categoryid = category.id
        where movie.id != #{id}
          and movie.id in (
            select movie_actor.movieid
            from movie_actor
            where movie_actor.movieid != #{id}
          and movie_actor.actorid in (
            select movie_actor.id
            from movie
            left join movie_actor on movie_actor.movieid = movie.id
            where movie.id = #{id}
            )
            )
        order by movie.pub_date desc
    </select>


    <insert id="saveMovie" parameterType="com.zjc.pojo.Movie">
        insert into movie(name,director,time_length,pub_date,description,rating,pic)
        values (#{name},#{director},#{time_length},#{pub_date},#{description},#{rating},#{pic})
        <selectKey order="AFTER" keyProperty="id" resultType="Integer">
            select LAST_INSERT_ID() as id
        </selectKey>
    </insert>


    <delete id="deleteMovieCategories">
        delete
        from movie_category
        where movieid = #{id}
    </delete>

    <delete id="deleteMovieActor">
        delete
        from movie_actor
        where movieid = #{id}
    </delete>

    <delete id="deleteMovie">
        delete
        from movie
        where id = #{id}
    </delete>


    <update id="updateMovie" parameterType="com.zjc.pojo.Movie">
        update movie
        set name        = #{name},
            director    = #{director},
            time_length = #{time_length},
            pub_date    = #{pub_date},
            description = #{description},
            rating      = #{rating},
            pic         = #{pic}
        where id = #{id}
    </update>
</mapper>